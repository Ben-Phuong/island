{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/friend": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "summary": "Get Friends of a User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Need authentication to use",
                "consumes": [
                    "application/json"
                ],
                "summary": "Create 2 new Friend docs in \"friends\" collection according to the ID of the 2 users involving in the relationship",
                "parameters": [
                    {
                        "description": "Update Friend Model",
                        "name": "interaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateFriend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Friend"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/mail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Need authentication to use",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "Send Mail to a User.",
                "parameters": [
                    {
                        "description": "Send Mail Model",
                        "name": "mail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SendMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Mail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/random_mail": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Need authentication to use",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "Send Mail to a random User.",
                "parameters": [
                    {
                        "description": "Send Random Mail Model",
                        "name": "mail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SendRandomMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Mail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/received_mails": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "Get all Mails that a User has Received from their friends by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetReceivedMailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/sent_mails": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "Get all Sent Mails from a User to their friends by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetSentMailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/unread_mails": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "mail"
                ],
                "summary": "Get all Mails that a User has Received from strangers by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetReceivedMailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Need authentication to use",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update Location of the User",
                "parameters": [
                    {
                        "description": "Update Location Model",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Need authentication to use",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create a new User doc in \"users\" collection",
                "parameters": [
                    {
                        "description": "User Entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Friend": {
            "type": "object",
            "properties": {
                "friendId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastInteraction": {
                    "description": "for sorting in descendant order of last interaction time",
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entity.Mail": {
            "type": "object",
            "properties": {
                "arrivalTime": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "receiverId": {
                    "type": "string"
                },
                "senderId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "avatarUrl": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "description": "update everytime the user logs ins",
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "username": {
                    "description": "unique and changable username, use for display",
                    "type": "string"
                }
            }
        },
        "model.GetReceivedMailResponse": {
            "type": "object",
            "properties": {
                "receivedMails": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/entity.Mail"
                        }
                    }
                },
                "toId": {
                    "type": "string"
                }
            }
        },
        "model.GetSentMailResponse": {
            "type": "object",
            "properties": {
                "fromId": {
                    "type": "string"
                },
                "sentMails": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/entity.Mail"
                        }
                    }
                }
            }
        },
        "model.SendMail": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "receiverId": {
                    "type": "string"
                },
                "senderId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.SendRandomMail": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "senderId": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.UpdateFriend": {
            "type": "object",
            "properties": {
                "interactionTime": {
                    "type": "string"
                },
                "userId1": {
                    "type": "string"
                },
                "userId2": {
                    "type": "string"
                }
            }
        },
        "model.UpdateLocation": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "util.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}